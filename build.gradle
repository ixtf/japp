allprojects {
    group 'com.github.ixtf'
    version '1.0'

    apply plugin: 'idea'
    apply plugin: 'maven'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://jitpack.io' }
    }
}
subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile 'org.apache.commons:commons-lang3:3.7',
                "org.apache.commons:commons-text:1.4",
                "org.apache.commons:commons-collections4:4.2",
                'commons-io:commons-io:2.6',
                "com.google.guava:guava:${guavaVersion}",
                "ch.qos.logback:logback-classic:${logbackVersion}",
                "ch.qos.logback:logback-access:${logbackVersion}",
                "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
                "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}"

        compileOnly "org.projectlombok:lombok:${lombokVersion}"

        testCompile "junit:junit:4.12",
                "org.projectlombok:lombok:${lombokVersion}"
    }

    jar.manifest {
        attributes(
                'Implementation-Title': name,
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Source-Compatibility': sourceCompatibility,
                'Target-Compatibility': targetCompatibility
        )
    }
    [compileJava, compileTestJava].each() {
//        it.options.compilerArgs += ["-Xlint:all", "-Xlint:-options", "-Xlint:-path"]
        it.options.encoding = "UTF-8"
        if (rootProject.hasProperty('failOnWarnings') && rootProject.failOnWarnings.toBoolean()) {
            it.options.compilerArgs += ["-Werror"]
        }
    }
    compileTestJava {
        // serialVersionUID is basically guaranteed to be useless in our tests
        options.compilerArgs += ["-Xlint:-serial"]
    }
//    javadoc.options {
//        encoding = 'UTF-8'
//        use = true
//        links 'https://docs.oracle.com/javase/8/docs/api/'
//    }
//    task javadocJar(type: Jar) {
//        classifier = 'javadoc'
//        from javadoc
//    }
//    task sourcesJar(type: Jar) {
//        classifier = 'sources'
//        from sourceSets.main.allSource
//    }
//    artifacts {
//        archives javadocJar, sourcesJar
//    }

}
