plugins {
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'io.franzbecker.gradle-lombok' version '3.0.0'
}
allprojects {
    group 'com.github.ixtf.japp'
    version '1.6.5'

    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'io.franzbecker.gradle-lombok'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://jitpack.io' }
    }

    dependencyManagement {
        imports {
            mavenBom "com.github.ixtf:bom:${bomVersion}"
        }
    }
}
subprojects {
    apply plugin: 'java'
    sourceCompatibility = 11
    targetCompatibility = 11

    dependencies {
        compile "org.apache.commons:commons-lang3",
                "org.apache.commons:commons-text",
                "org.apache.commons:commons-collections4",
                "commons-io:commons-io",
                "com.google.guava:guava",
                "ch.qos.logback:logback-classic",
                "ch.qos.logback:logback-access",
                "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8",
                "com.fasterxml.jackson.core:jackson-annotations",
                "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider",
                "com.fasterxml.jackson.datatype:jackson-datatype-jdk8",
                "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
                "com.fasterxml.jackson.module:jackson-module-parameter-names"

        compileOnly "io.vertx:vertx-codegen"

        testCompile "junit:junit",
                "io.vertx:vertx-unit",
                "io.vertx:vertx-web-client"
    }

    jar.manifest {
        attributes(
                'Implementation-Title': name,
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Source-Compatibility': sourceCompatibility,
                'Target-Compatibility': targetCompatibility
        )
    }
//    [compileJava, compileTestJava].each() {
////        it.options.compilerArgs += ["-Xlint:all", "-Xlint:-options", "-Xlint:-path"]
//        it.options.encoding = "UTF-8"
//        if (rootProject.hasProperty('failOnWarnings') && rootProject.failOnWarnings.toBoolean()) {
//            it.options.compilerArgs += ["-Werror"]
//        }
//    }
//    compileTestJava {
//        // serialVersionUID is basically guaranteed to be useless in our tests
//        options.compilerArgs += ["-Xlint:-serial"]
//    }
//    javadoc.options {
//        encoding = 'UTF-8'
//        use = true
//        links 'https://docs.oracle.com/javase/8/docs/api/'
//    }
//    task javadocJar(type: Jar) {
//        classifier = 'javadoc'
//        from javadoc
//    }
//    task sourcesJar(type: Jar) {
//        classifier = 'sources'
//        from sourceSets.main.allSource
//    }
//    artifacts {
//        archives javadocJar, sourcesJar
//    }

}
